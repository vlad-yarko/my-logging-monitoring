version: "3.9"


services:
  db:
    image: postgres:15.1-alpine
    container_name: db
    volumes:
      - my-logging-monitoring_db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - .env
    # environment:
    #   POSTGRES_LOGGING_COLLECTOR: "off"   # disable file logging
    # command: ["postgres", "-c", "logging_collector=off", "-c", "log_destination=stderr"]
    logging:
      driver: json-file
      options:  
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  db-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: db-exporter
    ports:
      - "9187:9187"
    depends_on:
      - db
    env_file:
      - .env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
      args:
        PYTHON_VERSION: "3.11-slim"
      target: dev
    container_name: backend
    ports:
      - "8000:8000"
    logging:
      driver: json-file
      options:  
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    # Dev only
    volumes:
      # - type: volume
      #   target: /app/.venv
      - type: bind
        source: ./backend
        target: /app
    depends_on:
      - db
    env_file:
      - .env

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    privileged: true # Need to be enabled for the promtail that it could take all logs
    depends_on:
      - backend
      - loki

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - lokidata:/loki

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    # environment:
    #   - GF_SECURITY_ADMIN_USER=business
    #   - GF_SECURITY_ADMIN_PASSWORD=business
    env_file:
      - .env
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafanadata:/var/lib/grafana
    depends_on:
      - loki
      - prometheus


volumes:
  my-logging-monitoring_db:
  grafanadata:
  prometheusdata:
  lokidata:
